{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "bedrock_schemas.behavior.entities.minecraft:breedable",
    "title": "minecraft:breedable",
    "description": "Defines the way an entity can get into the 'love' state.",
    "type": "object",
    "properties": {
        "allow_sitting": {
            "type": "boolean",
            "default": false,
            "description": "If true, entities can breed while sitting."
        },
        "blend_attributes": {
            "type": "boolean",
            "default": true,
            "description": "If true, the entities will blend their attributes in the offspring after they breed."
        },
        "blend_cooldown": {
            "type": "number",
            "default": 60,
            "description": "Time in seconds before the Entity can breed again."
        },
        "breeds_with": {
            "type": "array",
            "description": "The list of entity definitions that this entity can breed with.",
            "items": {
                "type": "object",
                "properties": {
                    "baby_type": {
                        "type": "string",
                        "description": "The entity definition of this entity's babies."
                    },
                    "breed_event": {
                        "$ref": "../../../../common/definition/definition_trigger_no_condition.json",
                        "description": "Event to run when this entity breeds."
                    },
                    "mate_type": {
                        "type": "string",
                        "description": "The entity definition of this entity's mate."
                    }
                }
            }
        },
        "causes_pregnancy": {
            "type": "boolean",
            "default": false,
            "description": "If true, the entity will become pregnant instead of spawning a baby."
        },
        "deny_parents_variant": {
            "type": "object",
            "description": "Determines how likely the baby of parents with the same variant will deny that variant and take a random variant within the given range instead.",
            "properties": {
                "chance": {
                    "type": "number",
                    "default": 0,
                    "description": "The percentage chance of denying the parents' variant."
                },
                "max_variant": {
                    "type": "integer",
                    "default": 0,
                    "description": "The inclusive maximum of the variant range."
                },
                "min_variant": {
                    "type": "integer",
                    "default": 0,
                    "description": "The inclusive minimum of the variant range."
                }
            }
        },
        "environment_requirements": {
            "type": "array",
            "description": "The list of nearby block requirements to get the entity into the 'love' state.",
            "items": {
                "type": "object",
                "properties": {
                    "blocks": {
                        "$ref": "../../../../common/definition/block/block_descriptor.json",
                        "description": "The block types required nearby for the entity to breed."
                    },
                    "count": {
                        "type": "integer",
                        "description": "The number of the required block types nearby for the entity to breed."
                    },
                    "radius": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 16,
                        "description": "How many blocks radius from the mob's center to search in for the required blocks. Bounded between 0 and 16."
                    }
                }
            }
        },
        "extra_baby_chance": {
            "type": "number",
            "description": "Chance that up to 16 babies will spawn between 0.0 and 1.0, where 1.0 is 100%.",
            "default": 0,
            "minimum": 0.0,
            "maximum": 1.0
        },
        "inherit_tamed": {
            "type": "boolean",
            "default": true,
            "description": "If true, the babies will be automatically tamed if its parents are."
        },
        "love_filters": {
            "$ref": "../../../../common/definition/entity/entity_filters.json",
            "description": "The filters to run when attempting to fall in love."
        },
        "mutation_factor": {
            "type": "object",
            "description": "Determines how likely the babies are to NOT inherit one of their parent's variances. Values are between 0.0 and 1.0, with a higher number meaning more likely to mutate.",
            "properties": {
                "color": {
                    "type": "number",
                    "default": 0,
                    "minimum": 0.0,
                    "maximum": 1.0,
                    "description": "The percentage chance of a mutation on the entity's color."
                },
                "extra_variant": {
                    "type": "number",
                    "default": 0,
                    "minimum": 0.0,
                    "maximum": 1.0,
                    "description": "The percentage chance of a mutation on the entity's extra variant type."
                },
                "variant": {
                    "type": "number",
                    "default": 0,
                    "minimum": 0.0,
                    "maximum": 1.0,
                    "description": "The percentage chance of a mutation on the entity's variant type."
                }
            }
        },
        "mutation_strategy": {
            "type": "string",
            "description": "Strategy used for mutating variants and extra variants for offspring. Current valid alternatives are 'random' and 'none'.",
            "enum": [
                "random",
                "none"
            ],
            "default": "none"
        },
        "parent_centric_attribute_blending": {
            "type": "array",
            "description": "[EXPERIMENTAL] List of attributes that should benefit from parent centric attribute blending. For example, horses blend their health, movement, and jump_strength in their offspring.",
            "items": {
                "type": "string",
                "enum": [
                    "minecraft:health",
                    "minecraft:movement",
                    "minecraft:horse.jump_strength"
                ]
            }
        },
        "random_extra_variant_mutation_interval": {
            "type": "array",
            "description": "Range used to determine random extra variant.",
            "items": {
                "type": "integer",
                "minimum": 0,
                "default": 0,
                "minItems": 2,
                "maxItems": 2
            }
        },
        "random_variant_mutation_interval": {
            "type": "array",
            "description": "Range used to determine random variant.",
            "items": {
                "type": "integer",
                "minimum": 0,
                "default": 0,
                "minItems": 2,
                "maxItems": 2
            }
        },
        "require_full_health": {
            "type": "boolean",
            "description": "If true, the entity needs to be at full health before it can breed.",
            "default": false
        },
        "require_tame": {
            "type": "boolean",
            "description": "If true, the entities need to be tamed first before they can breed.",
            "default": true
        },
        "transform_to_item": {
            "$ref": "../../../../common/definition/item/item_descriptor.json",
            "description": "The breed item used will transform to this item upon successful interaction. Format: itemName:auxValue"
        }
    }
}